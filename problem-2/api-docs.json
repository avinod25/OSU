{
	"openapi": "3.0.1",
	"info": {
		"title": "OSU test problem 2 API",
		"description": "OSU Problem 2",
		"termsOfService": "http://swagger.io/terms/",
		"license": {
			"name": "Apache 2.0",
			"url": "http://springdoc.org"
		},
		"version": "0.0.1-SNAPSHOT"
	},
	"servers": [
		{
			"url": "http://localhost:8080/demo",
			"description": "Generated server url"
		}
	],
	"tags": [
		{
			"name": "Authenticate",
			"description": "Access token API"
		},
		{
			"name": "Lobsters",
			"description": "Lobsters data manage API's"
		}
	],
	"paths": {
		"/api/lobsters": {
			"get": {
				"tags": [
					"Lobsters"
				],
				"summary": "Get all lobsters details",
				"operationId": "listLobsters",
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LobstersResponse"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Lobsters"
				],
				"summary": "Add lobster details",
				"operationId": "createLobster",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LobsterRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LobsterResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					},
					"401": {
						"description": "Authentication Failure"
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"bearer-token": []
					}
				]
			}
		},
		"/api/lobsters/{lobsterId}": {
			"get": {
				"tags": [
					"Lobsters"
				],
				"summary": "Get lobster details by Id",
				"operationId": "getLobster",
				"parameters": [
					{
						"name": "lobsterId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LobsterResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Lobsters"
				],
				"summary": "Update lobster details by Id",
				"operationId": "updateLobster",
				"parameters": [
					{
						"name": "lobsterId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LobsterRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LobsterResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					},
					"401": {
						"description": "Authentication Failure"
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"bearer-token": []
					}
				]
			},
			"delete": {
				"tags": [
					"Lobsters"
				],
				"summary": "Delete lobster details by Id",
				"operationId": "deleteLobster",
				"parameters": [
					{
						"name": "lobsterId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					},
					"401": {
						"description": "Authentication Failure"
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"bearer-token": []
					}
				]
			}
		},
		"/api/users/authenticate": {
			"post": {
				"tags": [
					"Authenticate"
				],
				"summary": "Get access token. Default username: 'osutest', password: 'Welcome@01'  ",
				"operationId": "createAuthenticationToken",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SigninRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SigninResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseResponse"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"LobsterInfo": {
				"type": "object",
				"properties": {
					"lobsterId": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"kind": {
						"type": "string",
						"enum": [
							"Clawed",
							"Spiny"
						]
					}
				}
			},
			"LobsterResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR",
							"INVALID_INPUT"
						]
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/LobsterInfo"
					}
				}
			},
			"BaseResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR",
							"INVALID_INPUT"
						]
					},
					"message": {
						"type": "string"
					}
				}
			},
			"LobsterRequest": {
				"required": [
					"kind",
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"kind": {
						"type": "string",
						"enum": [
							"Clawed",
							"Spiny"
						]
					}
				}
			},
			"LobstersResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR",
							"INVALID_INPUT"
						]
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LobsterInfo"
						}
					}
				}
			},
			"SigninResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR",
							"INVALID_INPUT"
						]
					},
					"message": {
						"type": "string"
					},
					"accessToken": {
						"type": "string"
					}
				}
			},
			"SigninRequest": {
				"required": [
					"password",
					"username"
				],
				"type": "object",
				"properties": {
					"username": {
						"type": "string",
						"description": "User name",
						"example": "osutest"
					},
					"password": {
						"type": "string",
						"description": "Password",
						"example": "Welcome@01"
					}
				}
			}
		},
		"securitySchemes": {
			"bearer-token": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}